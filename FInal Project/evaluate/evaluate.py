# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evaluate.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# importing required libraries and modules
from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3

class Ui_Form(object):

    # initializing variables
    def __init__(self):
        self.player_list = []
        self.team_list = []
        self.match_list = []
        self.all_points = []
        self.player_and_team = []
        self.selected_players = []
        self.strike_rate = 0
        self.economy_rate = 0
        self.final_pts = 0

    # method for displaying teams and matches in combo box
    def disp_team_and_match(self):
        cric_game = sqlite3.connect("cric_game.db")
        db_cursor = cric_game.cursor()
        db_cursor.execute("SELECT NAME FROM TEAMS;") # for team name
        for i in db_cursor.fetchall():
            if i[0] not in self.team_list:
                self.comboBox_Team.addItem(i[0])
                self.team_list.append(i[0])
        db_cursor.execute("SELECT MATCH_NO FROM MATCH;") # for match number
        for i in db_cursor.fetchall():
            if i[0] not in self.match_list:
                self.comboBox_match.addItem(str(i[0]))
                self.match_list.append(i[0])

    # method for displaying message box
    def msg_box(self, title, message):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle(title)
        msg.setText(message)
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setWindowIcon(QtGui.QIcon("message.png"))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        msg.setFont(font)
        msg.exec_()

    # method for displaying maximum and minimum points player
    def max_and_min(self):
        max_player_points = max(self.all_points)
        max_index = self.all_points.index(max_player_points)
        max_player_name = self.selected_players[max_index]
        min_player_points = min(self.all_points)
        min_index = self.all_points.index(min_player_points)
        min_player_name = self.selected_players[min_index]

        self.lab_max_player_name.setText(max_player_name)
        self.lab_max_player_points.setText("{}".format(max_player_points))
        self.lab_min_player_name.setText(min_player_name)
        self.lab_min_player_points.setText("{}".format(min_player_points))


    # method for calculating points
    def calc_pts(self):
        self.listWidget_players.clear()
        self.listWidget_points.clear()
        self.player_list = []
        self.all_points = []
        self.player_and_team = []
        self.selected_players = []
        self.final_pts = 0
        self.lab_final_pts.setText("{}".format(self.final_pts))
        cric_game = sqlite3.connect("cric_game.db")
        db_cursor = cric_game.cursor()
        db_cursor.execute("SELECT PLAYER, NAME FROM TEAMS;")
        for i in db_cursor.fetchall():
            self.player_and_team.append(i)
        db_cursor.execute("SELECT PLAYER, SCORED, FACED, FOURS, SIXES, BOWLED, MAIDEN, GIVEN, WKTS, CATCHES, STUMPING, RO, MATCH_NO FROM MATCH;")
        self.listWidget_points.clear()
        self.listWidget_players.clear()

        if "Select Team" == self.comboBox_Team.currentText() and "Select Match" == self.comboBox_match.currentText():
            self.msg_box("Warning!!", "Select Team and Match")
        elif "Select Team" == self.comboBox_Team.currentText():
            self.msg_box("Warning!!", "Select Team")
        elif "Select Match" == self.comboBox_match.currentText():
            self.msg_box("Warning!!", "Select Match")
        else:
            for i in db_cursor.fetchall():
                for j in self.player_and_team:
                    self.pts = 0
                    self.economy_rate = 0
                    self.strike_rate = 0
                    if (j[1] == self.comboBox_Team.currentText() and int(i[12]) == int(self.comboBox_match.currentText())):
                        if i[0] == j[0]:
                            self.listWidget_players.addItem(i[0])
                            self.selected_players.append((i[0]))
                            self.pts += i[1]//2  # 1 point for 2 runs scored
                            self.pts +=  i[3]  # 1 point for fours
                            self.pts += i[4] * 2  # 2 points for sixes
                            try:
                                self.strike_rate = (i[1] / i[2]) * 100  # calculating strike rate
                            except ZeroDivisionError:  # for players with 0 balls playes
                                pass
                            if self.strike_rate > 100 :
                                self.pts += 4  # 4 points for strike rate greater than 100
                            elif (self.strike_rate > 80 and self.strike_rate < 100):
                                self.pts += 2  # 2 points for strike rate of 80-100
                            if i[1] >= 50:
                                self.pts += 5  # 5 points for half-century
                            if i[1] >= 100:
                                self.pts += 10  # 10 points for century
                            self.pts += (i[9] + i[10] + i[11]) * 10  # 10 points for catches , stumping and run out each
                            self.pts += i[8] * 10  # 10 points for each wicket
                            if i[8] >= 3:
                                self.pts += 5  # 5 points for wickets greater than 3
                            if i[8] >= 5:
                                self.pts += 10  # 10 points for wickets greater than 5
                            try:
                                self.economy_rate = i[7] / i[5]   # calculating economy rate
                            except ZeroDivisionError:  # for players with 0 balls bowled
                                pass
                            if i[5] != 0:
                                if (self.economy_rate >= 3.5 and self.economy_rate <= 4.5):
                                    self.pts += 4  # 4 points for economy between 3.5 and 4.5
                                elif (self.economy_rate >= 2 and self.economy_rate <= 3.5):
                                    self.pts += 7   # 7 points for economy between 2 and 3.5
                                elif (self.economy_rate < 2):
                                    self.pts += 10  # 10points for economy less than 2
                            self.all_points.append(self.pts)
                            self.listWidget_points.addItem("{}".format(self.pts))

            for i in self.all_points:
                self.final_pts += i
            self.lab_final_pts.setText("{}".format(self.final_pts))
            self.max_and_min()


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(641, 651)
        Form.setStyleSheet("background-color: rgb(129, 255, 203);")
        Form.setWindowIcon(QtGui.QIcon("cric.png"))
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lab_title = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.lab_title.setFont(font)
        self.lab_title.setAlignment(QtCore.Qt.AlignCenter)
        self.lab_title.setObjectName("lab_title")
        self.verticalLayout.addWidget(self.lab_title)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboBox_Team = QtWidgets.QComboBox(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_Team.setFont(font)
        self.comboBox_Team.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.comboBox_Team.setObjectName("comboBox_Team")
        self.comboBox_Team.addItem("")
        self.horizontalLayout.addWidget(self.comboBox_Team)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.comboBox_match = QtWidgets.QComboBox(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_match.setFont(font)
        self.comboBox_match.setObjectName("comboBox_match")
        self.comboBox_match.addItem("")
        self.horizontalLayout.addWidget(self.comboBox_match)
        self.disp_team_and_match()  # calling method to display team and match in combo box
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.line = QtWidgets.QFrame(Form)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.lab_players = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_players.setFont(font)
        self.lab_players.setAlignment(QtCore.Qt.AlignCenter)
        self.lab_players.setObjectName("lab_players")
        self.horizontalLayout_2.addWidget(self.lab_players)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lab_points = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_points.setFont(font)
        self.lab_points.setAlignment(QtCore.Qt.AlignCenter)
        self.lab_points.setObjectName("lab_points")
        self.horizontalLayout_3.addWidget(self.lab_points)
        self.lab_final_pts = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_final_pts.setFont(font)
        self.lab_final_pts.setAlignment(QtCore.Qt.AlignCenter)
        self.lab_final_pts.setObjectName("lab_final_pts")
        self.horizontalLayout_3.addWidget(self.lab_final_pts)
        self.horizontalLayout_2.addLayout(self.horizontalLayout_3)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.listWidget_players = QtWidgets.QListWidget(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.listWidget_players.setFont(font)
        self.listWidget_players.setObjectName("listWidget_players")
        self.horizontalLayout_4.addWidget(self.listWidget_players)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.listWidget_points = QtWidgets.QListWidget(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.listWidget_points.setFont(font)
        self.listWidget_points.setObjectName("listWidget_points")
        self.horizontalLayout_4.addWidget(self.listWidget_points)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.line = QtWidgets.QFrame(Form)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.lab_max = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lab_max.setFont(font)
        self.lab_max.setObjectName("lab_max")
        self.horizontalLayout_6.addWidget(self.lab_max)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem3)
        self.lab_min = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lab_min.setFont(font)
        self.lab_min.setObjectName("lab_min")
        self.horizontalLayout_6.addWidget(self.lab_min)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.lab_max_player_name = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_max_player_name.setFont(font)
        self.lab_max_player_name.setObjectName("lab_max_player_name")
        self.horizontalLayout_7.addWidget(self.lab_max_player_name)
        self.lab_max_player_points = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_max_player_points.setFont(font)
        self.lab_max_player_points.setObjectName("lab_max_player_points")
        self.horizontalLayout_7.addWidget(self.lab_max_player_points)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem4)
        self.lab_min_player_name = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_min_player_name.setFont(font)
        self.lab_min_player_name.setObjectName("lab_min_player_name")
        self.horizontalLayout_7.addWidget(self.lab_min_player_name)
        self.lab_min_player_points = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.lab_min_player_points.setFont(font)
        self.lab_min_player_points.setObjectName("lab_min_player_points")
        self.horizontalLayout_7.addWidget(self.lab_min_player_points)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.line_2 = QtWidgets.QFrame(Form)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem3)
        self.button_calc_score = QtWidgets.QPushButton(Form)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.button_calc_score.setFont(font)
        self.button_calc_score.setObjectName("button_calc_score")
        self.horizontalLayout_5.addWidget(self.button_calc_score)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.button_calc_score.clicked.connect(self.calc_pts)   # connecting "calculate" push button
        self.retranslateUi(Form)
        self.button_calc_score.clicked.connect(self.lab_final_pts.show)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Evaluate"))
        self.lab_title.setText(_translate("Form", "Evaluate the performance of your Fantasy Cricket Team"))
        self.comboBox_Team.setItemText(0, _translate("Form", "Select Team"))
        self.comboBox_match.setItemText(0, _translate("Form", "Select Match"))
        self.lab_players.setText(_translate("Form", "Players"))
        self.lab_points.setText(_translate("Form", "Points"))
        self.lab_final_pts.setText(_translate("Form", "0"))
        self.lab_max.setText(_translate("Form", "Maxmimum Points Player"))
        self.lab_min.setText(_translate("Form", "Minimum Points Player"))
        self.lab_max_player_name.setText(_translate("Form", "# Player"))
        self.lab_max_player_points.setText(_translate("Form", "# Points"))
        self.lab_min_player_name.setText(_translate("Form", "# Player"))
        self.lab_min_player_points.setText(_translate("Form", "# Points"))
        self.button_calc_score.setText(_translate("Form", "CALCULATE SCORE (ctrl+enter)"))

        # setting shortcut
        self.button_calc_score.setShortcut(_translate("Form", "Ctrl+Return"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())